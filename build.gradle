buildscript {
    ext {
        kotlinVersion = '1.2.30'
        springBootVersion = '2.0.0.RELEASE'

        projectVersion = new File("$projectDir/VERSION").text

        if (System.getenv('JENKINS_URL') != null && System.getenv('BUILD_NUMBER') != null) {
            branch = System.getenv('BRANCH_NAME').replaceAll(/[^0-9A-Za-z-]+/, '-')
            branch_suffix = "-" + branch
            if (branch == 'master') {
                branch_suffix = ""
            }
            projectVersion = projectVersion + '.' + System.getenv('BUILD_NUMBER') + branch_suffix
        } else {
            projectVersion = projectVersion + '-SNAPSHOT'
        }
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'nu.peg.mobilion'
version = projectVersion
sourceCompatibility = 1.8

jar {
    baseName = "mobilion-api"
}

task configurationZip(type: Zip) {
    archiveName = 'mobilion-configuration.' + projectVersion + '.zip'
    from(fileTree(dir: 'src/main/resources').include('*.deploy.yml'))
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}